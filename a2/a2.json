{"pl-name": "Clojure", "project-name": "Propositional Logic Inference System Project", "project-description": "In this project you will implement part of a propositional logic inference system in Clojure. Specifically, your system will perform not, and, and if-elimination using forward chaining inference. This means that given a proposition and a knowledge base of known facts, your system will derive all propositions which follow using the rules of inference.\n\nYou will implement four rules of inference:\n\nnot-elimination: from (not (not X)), infer X\nand-elimination: from (and X Y), infer X and infer Y\nmodus ponens: from (if X Y) and X, infer Y\nmodus tollens: from (if X Y) and (not Y), infer (not X)\nThe main entry point for your program should be a function called fwd-infer which takes two arguments: a proposition, and a set of known facts (propositions). It should return the new knowledge base \u2013 that is, the originally known facts with the proposition and any newly inferred propositions added to it."}